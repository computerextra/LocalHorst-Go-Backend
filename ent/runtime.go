// Code generated by ent, DO NOT EDIT.

package ent

import (
	"golang-backend/ent/ansprechpartner"
	"golang-backend/ent/lieferant"
	"golang-backend/ent/mitarbeiter"
	"golang-backend/ent/schema"
	"golang-backend/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	ansprechpartnerFields := schema.Ansprechpartner{}.Fields()
	_ = ansprechpartnerFields
	// ansprechpartnerDescName is the schema descriptor for Name field.
	ansprechpartnerDescName := ansprechpartnerFields[0].Descriptor()
	// ansprechpartner.NameValidator is a validator for the "Name" field. It is called by the builders before save.
	ansprechpartner.NameValidator = ansprechpartnerDescName.Validators[0].(func(string) error)
	lieferantFields := schema.Lieferant{}.Fields()
	_ = lieferantFields
	// lieferantDescFirma is the schema descriptor for Firma field.
	lieferantDescFirma := lieferantFields[0].Descriptor()
	// lieferant.FirmaValidator is a validator for the "Firma" field. It is called by the builders before save.
	lieferant.FirmaValidator = lieferantDescFirma.Validators[0].(func(string) error)
	mitarbeiterFields := schema.Mitarbeiter{}.Fields()
	_ = mitarbeiterFields
	// mitarbeiterDescName is the schema descriptor for Name field.
	mitarbeiterDescName := mitarbeiterFields[0].Descriptor()
	// mitarbeiter.NameValidator is a validator for the "Name" field. It is called by the builders before save.
	mitarbeiter.NameValidator = mitarbeiterDescName.Validators[0].(func(string) error)
	// mitarbeiterDescAzubi is the schema descriptor for Azubi field.
	mitarbeiterDescAzubi := mitarbeiterFields[11].Descriptor()
	// mitarbeiter.DefaultAzubi holds the default value on creation for the Azubi field.
	mitarbeiter.DefaultAzubi = mitarbeiterDescAzubi.Default.(bool)
	// mitarbeiterDescPaypal is the schema descriptor for Paypal field.
	mitarbeiterDescPaypal := mitarbeiterFields[13].Descriptor()
	// mitarbeiter.DefaultPaypal holds the default value on creation for the Paypal field.
	mitarbeiter.DefaultPaypal = mitarbeiterDescPaypal.Default.(bool)
	// mitarbeiterDescAbonniert is the schema descriptor for Abonniert field.
	mitarbeiterDescAbonniert := mitarbeiterFields[14].Descriptor()
	// mitarbeiter.DefaultAbonniert holds the default value on creation for the Abonniert field.
	mitarbeiter.DefaultAbonniert = mitarbeiterDescAbonniert.Default.(bool)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescName is the schema descriptor for Name field.
	userDescName := userFields[0].Descriptor()
	// user.NameValidator is a validator for the "Name" field. It is called by the builders before save.
	user.NameValidator = userDescName.Validators[0].(func(string) error)
	// userDescPassword is the schema descriptor for Password field.
	userDescPassword := userFields[1].Descriptor()
	// user.PasswordValidator is a validator for the "Password" field. It is called by the builders before save.
	user.PasswordValidator = userDescPassword.Validators[0].(func(string) error)
	// userDescMail is the schema descriptor for Mail field.
	userDescMail := userFields[2].Descriptor()
	// user.MailValidator is a validator for the "Mail" field. It is called by the builders before save.
	user.MailValidator = userDescMail.Validators[0].(func(string) error)
	// userDescActive is the schema descriptor for Active field.
	userDescActive := userFields[3].Descriptor()
	// user.DefaultActive holds the default value on creation for the Active field.
	user.DefaultActive = userDescActive.Default.(bool)
}
