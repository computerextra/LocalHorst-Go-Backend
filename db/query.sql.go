// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: query.sql

package db

import (
	"context"
)

const searchArchive = `-- name: SearchArchive :many
SELECT title, body, id from pdfs 
WHERE body 
LIKE ? 
OR title LIKE ?
`

type SearchArchiveParams struct {
	Body  string
	Title string
}

func (q *Queries) SearchArchive(ctx context.Context, arg SearchArchiveParams) ([]Pdf, error) {
	rows, err := q.db.QueryContext(ctx, searchArchive, arg.Body, arg.Title)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Pdf
	for rows.Next() {
		var i Pdf
		if err := rows.Scan(&i.Title, &i.Body, &i.ID); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
